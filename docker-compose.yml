services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: server
    ports:
      - 80:80
    networks:
      - network
    depends_on:
      - api
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - URL_API=${API}
    profiles:
      - prod

  sys:
    build: ./sys
    container_name: sys
    ports:
      - 8082:4300
    networks:
      - network
    depends_on:
      - api-dev
    volumes:
      - ./sys:/app
    profiles:
      - dev

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api
    expose:
      - 8080
    networks:
      - network
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DEFAULT_CONNECTION=${SERVER}
      - ENCRYPT_KEY=${EKEY}
    profiles:
      - prod

  api-dev:
    build: ./api
    container_name: api
    ports:
      - 8080:8080
    networks:
      - network
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DEFAULT_CONNECTION=${SERVER}
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ENCRYPT_KEY=${EKEY}
    volumes:
      - ./api:/app
    profiles:
      - api
      - dev

  db:
    build: ./db
    container_name: db
    expose:
      - 3306
    networks:
      - network
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=${DB}
      - MYSQL_ROOT_PASSWORD=${PASSWD}
    profiles:
      - prod
      - dev
      - api

networks:
  network:
    driver: bridge
