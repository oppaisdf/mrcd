ARG BASE_TAG=8.0

# Etapa 1: Construcción
FROM mcr.microsoft.com/dotnet/sdk:${BASE_TAG} AS build
WORKDIR /src

# Copiar csproj y restaurar dependencias
COPY ./api/*.csproj ./
RUN dotnet restore

# Copiar el resto del código y compilar
COPY ./api ./
RUN dotnet publish -c Release -o /app

# Etapa 2: Ejecución
FROM mcr.microsoft.com/dotnet/aspnet:${BASE_TAG} AS runtime
WORKDIR /app
COPY --from=build /app .

# Certificados para verificar CA de DB
RUN apt-get update && apt-get install -y --no-install-recommends curl ca-certificates openssl && rm -rf /var/lib/apt/lists/*
RUN curl -sSL https://cacerts.digicert.com/DigiCertGlobalRootG2.crt.pem \
	-o /usr/local/share/ca-certificates/DigiCertGlobalRootG2.crt \
	&& curl -sSL https://www.microsoft.com/pkiops/certs/Microsoft%20RSA%20Root%20Certificate%20Authority%202017.crt \
	-o /tmp/MSRSA2017.crt \
	&& openssl x509 -inform der -in /tmp/MSRSA2017.crt \
	-out /usr/local/share/ca-certificates/MSRSA2017.crt \
	&& rm /tmp/MSRSA2017.crt \
	&& update-ca-certificates

# Exponer el puerto de la aplicación
EXPOSE 8080

# Variables de entorno
ENV ASPNETCORE_ENVIRONMENT=Production

# Comando para ejecutar la aplicación
ENTRYPOINT ["dotnet", "api.dll"]
